[{"/home/ec2-user/environment/Netflix-React/src/index.js":"1","/home/ec2-user/environment/Netflix-React/src/App.js":"2","/home/ec2-user/environment/Netflix-React/src/reportWebVitals.js":"3","/home/ec2-user/environment/Netflix-React/src/layout/Navbar/index.js":"4","/home/ec2-user/environment/Netflix-React/src/Axios.js":"5","/home/ec2-user/environment/Netflix-React/src/layout/Banner/index.js":"6","/home/ec2-user/environment/Netflix-React/src/api.js":"7","/home/ec2-user/environment/Netflix-React/src/components/Row/index.js":"8","/home/ec2-user/environment/Netflix-React/src/components/Poster/index.js":"9"},{"size":500,"mtime":1610088538962,"results":"10","hashOfConfig":"11"},{"size":918,"mtime":1611655290751,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610088538962,"results":"13","hashOfConfig":"11"},{"size":2980,"mtime":1611651998456,"results":"14","hashOfConfig":"11"},{"size":327,"mtime":1610693191814,"results":"15","hashOfConfig":"11"},{"size":2541,"mtime":1611906655045,"results":"16","hashOfConfig":"11"},{"size":607,"mtime":1611655702771,"results":"17","hashOfConfig":"11"},{"size":1265,"mtime":1611906647477,"results":"18","hashOfConfig":"11"},{"size":364,"mtime":1611906899890,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1j3tn4l",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/Netflix-React/src/index.js",[],["40","41"],"/home/ec2-user/environment/Netflix-React/src/App.js",[],"/home/ec2-user/environment/Netflix-React/src/reportWebVitals.js",[],"/home/ec2-user/environment/Netflix-React/src/layout/Navbar/index.js",[],"/home/ec2-user/environment/Netflix-React/src/Axios.js",[],"/home/ec2-user/environment/Netflix-React/src/layout/Banner/index.js",[],"/home/ec2-user/environment/Netflix-React/src/api.js",[],"/home/ec2-user/environment/Netflix-React/src/components/Row/index.js",["42"],"import './styles.css'\nimport { useState, useEffect } from 'react'\nimport Poster from '../Poster'\nimport Axios from '../../Axios'\n\nfunction Row({ title, url, isPoster = false }) {\n    // Stores the list of Posters\n    const [topRated, setTopRated] = useState([])\n    \n    useEffect(() => {\n        async function getTopRated() {\n            try {\n                //get a list of top rated movies\n                const response = await Axios.get(url)\n\n                //state-ify the movie\n                setTopRated(response.data.results)\n            } catch (err) {\n                console.error(err)\n            }\n        }\n        \n        getTopRated()\n    }, [])\n    \n    return (\n        <div className=\"row\">\n            {/* rowArray.map() builds out the <Poster data={data} /> */}\n            \n            <h2>{title}</h2>\n            \n            <div className=\"row-slider\">\n                {\n                    topRated.map(poster =>\n                        <Poster \n                            key={poster.id} \n                            url={isPoster ? poster.poster_path : poster.backdrop_path} \n                            title={poster.name} />\n                    )\n                }\n            </div>\n        </div>\n    )\n} \n\nexport default Row","/home/ec2-user/environment/Netflix-React/src/components/Poster/index.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":24,"column":8,"nodeType":"49","endLine":24,"endColumn":10,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [url]",{"range":"56","text":"57"},[664,666],"[url]"]